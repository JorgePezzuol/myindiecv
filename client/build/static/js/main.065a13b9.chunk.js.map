{"version":3,"sources":["components/Signin.js","App.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Signin","classes","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","value","Button","Box","mt","App","useEffect","a","fetchToken","setTimeout","fetchAllUsers","getAllUsers","fetch","credentials","response","json","data","console","log","method","headers","body","JSON","stringify","email","password","path","exact","render","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.065a13b9.chunk.js","sourcesContent":["import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://www.linkedin.com/in/jorge-pezzuol/\">\n        Jorge Pezzuol\n      </Link>\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Signin() {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              type=\"email\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","import { useEffect } from \"react\";\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router,\n  Redirect,\n} from \"react-router-dom\";\nimport Signin from \"./components/Signin\";\nimport Signup from \"./components/Signup\";\n\nfunction App() {\n  useEffect(() => {\n    const getAllUsers = async () => {\n      fetchToken();\n      setTimeout(() => {\n        fetchAllUsers();\n      }, 300);\n    };\n    getAllUsers();\n  }, []);\n\n  const fetchAllUsers = async () => {\n    const response = await fetch(\"/users\", {\n      credentials: \"include\",\n    });\n    const data = await response.json();\n    console.log(data);\n    return data;\n  };\n\n  const fetchToken = async () => {\n    const response = await fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: \"jorge2@test.com\", password: \"testpass\" }),\n    });\n    const data = await response.json();\n    return data;\n  };\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact render={() => <p>home</p>} />\n        <Route exact path=\"/test\" component={Signin} />\n        <Route exact path=\"/profile\" render={() => <p>profile</p>}></Route>\n        {/* <PrivateRoute authed={isLoggedIn} path=\"/profile\" component={Signin} /> */}\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  );\n}\n\nfunction PrivateRoute({ component: Component, authed, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authed === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}