{"version":3,"sources":["components/Copyright.js","utils/utils.js","hooks/useLocalStorage.js","pages/Signin.js","components/auth/PrivateRoute.js","components/utils/SnackBar.js","components/utils/AlertDialogSlide.js","components/auth/SessionAppBar.js","assets/empty.svg","pages/cv/Dashboard.js","services/CvService.js","components/cv/PersonalDetail.js","components/cv/RichTextEditor.js","components/cv/ProfessionalSummary.js","components/cv/Employement.js","components/cv/AddExperience.js","components/cv/EmploymentHistory.js","components/cv/Education.js","components/cv/EducationHistory.js","components/cv/SocialLink.js","components/cv/SocialLinkList.js","components/cv/Language.js","components/cv/LanguageList.js","components/cv/Skill.js","components/cv/SkillChips.js","components/cv/SkillList.js","components/cv/CvDataWrapper.js","components/cv/PreviewButton.js","components/cv/UpdateCvNameDialog.js","pages/cv/Edit.js","pages/Signup.js","components/cv/preview/SocialLinksPreview.js","components/cv/preview/PersonalDetailsPreview.js","components/cv/preview/EmploymentHistoryPreview.js","components/cv/preview/EducationHistoryPreview.js","pages/cv/CvPreview.js","pages/cv/CvPrint.js","assets/cv-example.png","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","API_URL","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Signin","classes","push","useHistory","hasLoginFailed","setHasLoginFailed","setUser","remember","setRemember","emailRemember","setEmailRemember","email","setEmail","password","setPassword","fetchToken","a","fetch","method","headers","body","response","data","ok","json","handleSubmit","e","preventDefault","pathname","state","Alert","props","elevation","Grid","container","component","className","CssBaseline","xs","sm","md","Paper","square","severity","Avatar","onSubmit","TextField","required","fullWidth","label","autoFocus","onChange","target","FormControlLabel","control","Checkbox","checked","Button","onClick","Box","mt","backdrop","zIndex","drawer","PrivateRoute","Component","rest","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","useEffect","authenticateToken","res","getAuthenticateToken","credentials","status","Backdrop","open","CircularProgress","render","to","SimpleSnackbar","setHasDeleted","message","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","Fragment","IconButton","size","aria-label","fontSize","Transition","React","forwardRef","ref","Slide","direction","AlertDialogSlide","title","contentText","handleConfirm","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","SessionAppBar","user","anchorEl","setAnchorEl","handleLogout","AppBar","position","Toolbar","noWrap","aria-controls","aria-haspopup","currentTarget","firstName","lastName","Menu","Boolean","MenuItem","heroContent","background","padding","heroButtons","cardGrid","paddingTop","paddingBottom","card","cardContent","Dashboard","cvs","setCvs","hasDeleted","cvToBeDeleted","setCvToBeDeleted","fetchCvs","handleCreateNewCv","cv","_id","cvId","handleDelete","filter","Container","maxWidth","paragraph","justify","startIcon","length","map","index","Card","CardContent","gutterBottom","name","Date","lastUpdated","toLocaleString","timeStyle","dateStyle","CardActions","style","src","nocvs","alt","fetchCvById","updateEntity","entityName","entity","setDelay","updateFunction","setTimeout","PersonalDetail","personalDetails","setPersonalDetails","timeoutId","clearTimeout","placeholder","marginBottom","jobTitle","mail","phone","RichTextEditor","object","setObject","EditorState","createWithContent","ContentState","createFromBlockArray","convertFromHTML","description","editorState","setEditorState","convertContentToHTML","currentContentAsHTML","convertToHTML","getCurrentContent","onEditorStateChange","wrapperClassName","editorClassName","toolbarClassName","options","inline","ProfessionalSummary","professionalSummary","setProfessionalSummary","Employment","attributes","employment","setEmployment","isDeleting","setIsDeleting","updateEmployment","Accordion","AccordionSummary","expandIcon","startDate","toLocaleDateString","endDate","AccordionDetails","employer","InputLabelProps","shrink","city","AddExperience","handleAdd","useParams","textTransform","EmploymentHistory","sethasDeleted","employmentList","setEmploymentList","employmentId","Employement","newEmployment","Education","education","setEducation","updateEducation","school","degree","EducationHistory","educationList","setEducationList","educationId","newEducation","SocialLink","socialLink","setSocialLink","updateLink","SocialLinkList","linksList","setLinksList","linkId","newLink","Language","language","setLanguage","updateLanguage","level","FormControl","InputLabel","htmlFor","Select","native","LanguageList","languageList","setLanguageList","languageId","newLanguage","Skill","skill","setSkill","updateSkill","SkillChips","pickableSkills","setPickableSkills","p","endIcon","s","PickableSkills","skillList","setSkillList","skillId","newSkill","CvDataWrapper","socialLinksList","SkillList","fab","bottom","right","PreviewButton","userName","Fab","ml","UpdateCvNameDialog","handleUpdate","cvName","setCvName","updateCvName","wrapper","Edit","setCv","isUpdatingCvName","setIsUpdatingCvName","getCvById","cursor","Divider","concat","trim","toLowerCase","Signup","hasCreateFailed","setHasCreateFailed","_setUser","SocialLinksPreview","mb","sectionTitle","normalText","PersonalDetailsPreview","subTitle","EmploymentHistoryPreview","dangerouslySetInnerHTML","__html","EducationHistoryPreview","float","bold","fontWeight","letterSpacing","nameSurname","CvPreview","progressMap","Map","set","get","max","orientation","CvPrint","Home","cvExImage","App","exact","path","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.674d1825.chunk.js","sourcesContent":["import Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://www.linkedin.com/in/jorge-pezzuol/\">\n        Jorge Pezzuol\n      </Link>\n    </Typography>\n  );\n};\n\nexport default Copyright;\n","// export const API_URL = \"http://localhost:5001/api\";\nexport const API_URL = \"https://myindiecv.herokuapp.com/api\";\n","import { useState } from \"react\";\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport Copyright from \"../components/Copyright\";\nimport { API_URL } from \"../utils/utils\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    // backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundImage: \"url(https://source.unsplash.com/daily?resume)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Signin = () => {\n  const classes = useStyles();\n  const { push } = useHistory();\n\n  const [hasLoginFailed, setHasLoginFailed] = useState(false);\n  const [user, setUser] = useLocalStorage(\"user\", {});\n  const [remember, setRemember] = useLocalStorage(\"remember\", false);\n  const [emailRemember, setEmailRemember] = useLocalStorage(\n    \"emailRemember\",\n    \"\"\n  );\n  const [email, setEmail] = useState(emailRemember);\n  const [password, setPassword] = useState(\"\");\n\n  const fetchToken = async () => {\n    const response = await fetch(`${API_URL}/users/login`, {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({ email: email, password: password }),\n    });\n    let data = null;\n    if (response.ok) {\n      data = await response.json();\n    }\n    return data;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetchToken();\n\n    if (response) {\n      setUser(response);\n      false === remember ? setEmailRemember(\"\") : setEmailRemember(email);\n      push({\n        pathname: \"/dashboard\",\n        state: {},\n      });\n    } else {\n      setHasLoginFailed(true);\n    }\n  };\n\n  const Alert = (props) => (\n    <MuiAlert elevation={6} variant=\"filled\" {...props} />\n  );\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        {hasLoginFailed && (\n          <Alert severity=\"error\">Wrong username or password</Alert>\n        )}\n\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Email Address\"\n              type=\"email\"\n              autoFocus\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={remember}\n                  onChange={(e) => {\n                    setRemember(!remember);\n                  }}\n                  color=\"primary\"\n                />\n              }\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              {/* <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid> */}\n              <Grid item>\n                <Link\n                  href=\"#\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    push({\n                      pathname: \"/signup\",\n                    });\n                  }}\n                  variant=\"body2\"\n                >\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Signin;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { API_URL } from \"../../utils/utils\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#000\",\n  },\n}));\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const classes = useStyles();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const getAuthenticateToken = async () => {\n      const res = await authenticateToken();\n      setIsLoggedIn(res);\n      setIsLoading(false);\n    };\n    getAuthenticateToken();\n  }, []);\n\n  const authenticateToken = async () => {\n    const res = await fetch(`${API_URL}/authenticateToken`, {\n      credentials: \"include\",\n    });\n    return res.status === 401 ? false : true;\n  };\n\n  return isLoading ? (\n    <Backdrop className={classes.backdrop} open={true}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  ) : (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nexport default function SimpleSnackbar({ setHasDeleted, message }) {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setHasDeleted(false);\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        open={true}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message={message}\n        action={\n          <React.Fragment>\n            {/* <Button color=\"primary\" size=\"small\" onClick={handleClose}>\n              UNDO\n            </Button> */}\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleClose}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst AlertDialogSlide = ({\n  title,\n  contentText,\n  handleConfirm,\n  handleClose,\n}) => {\n  return (\n    <div>\n      <Dialog\n        open={true}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {contentText}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\nexport default AlertDialogSlide;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { API_URL } from \"../../utils/utils\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n}));\n\nconst SessionAppBar = () => {\n  const classes = useStyles();\n  const { push } = useHistory();\n  const [user, setUser] = useLocalStorage(\"user\", {});\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = async () => {\n    await fetch(`${API_URL}/users/logout`, {\n      credentials: \"include\",\n    });\n    push({\n      pathname: \"/login\",\n    });\n  };\n\n  return (\n    <AppBar\n      position=\"static\"\n      color=\"default\"\n      elevation={0}\n      className={classes.appBar}\n    >\n      <Toolbar className={classes.toolbar}>\n        <Typography\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.toolbarTitle}\n        >\n          CV Maker\n        </Typography>\n        <nav>\n          <Button\n            color=\"textPrimary\"\n            onClick={(e) => {\n              e.preventDefault();\n              push(\"/dashboard\");\n            }}\n            className={classes.link}\n          >\n            Dashboard\n          </Button>\n        </nav>\n        <Button\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n        >\n          {user.firstName} {user.lastName}\n          <KeyboardArrowDownIcon />\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {/* <MenuItem onClick={handleClose}>Buy my a coffee</MenuItem> */}\n          <MenuItem onClick={handleLogout}>Logout</MenuItem>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default SessionAppBar;\n","export default __webpack_public_path__ + \"static/media/empty.c8301e2a.svg\";","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Snackbar from \"../../components/utils/SnackBar\";\nimport AlertDialogSlide from \"../../components/utils/AlertDialogSlide\";\n\nimport SessionAppBar from \"../../components/auth/SessionAppBar\";\nimport nocvs from \"../../assets/empty.svg\";\nimport { API_URL } from \"../../utils/utils\";\n\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [cvs, setCvs] = useState([]);\n  const [hasDeleted, setHasDeleted] = useState(false);\n  const [cvToBeDeleted, setCvToBeDeleted] = useState(\"\");\n  const { push } = useHistory();\n\n  useEffect(() => {\n    const fetchCvs = async () => {\n      const response = await fetch(`${API_URL}/cv/user`, {\n        credentials: \"include\",\n      });\n      const data = await response.json();\n      setCvs(data);\n    };\n    fetchCvs();\n  }, []);\n\n  const handleCreateNewCv = async () => {\n    const response = await fetch(`${API_URL}/cv/create`, {\n      method: \"POST\",\n      credentials: \"include\",\n    });\n    const cv = await response.json();\n    push({\n      pathname: `cv/edit/${cv._id}`,\n      state: {\n        cvId: cv._id,\n      },\n    });\n  };\n\n  const handleDelete = async (cvId) => {\n    await fetch(`${API_URL}/cv/${cvId}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n    });\n    setCvs(cvs.filter((cv) => cv._id !== cvId));\n    setHasDeleted(true);\n    setCvToBeDeleted(\"\");\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <SessionAppBar />\n      {hasDeleted && (\n        <Snackbar setHasDeleted={setHasDeleted} message=\"CV has been deleted\" />\n      )}\n      {cvToBeDeleted !== \"\" && (\n        <AlertDialogSlide\n          title={\"Delete CV\"}\n          contentText={\"Are you sure you want to delete this CV?\"}\n          handleConfirm={() => handleDelete(cvToBeDeleted)}\n          handleClose={() => setCvToBeDeleted(\"\")}\n        />\n      )}\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"sm\">\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n            align=\"center\"\n            color=\"textPrimary\"\n          >\n            Dashboard\n          </Typography>\n          <Typography\n            variant=\"h6\"\n            align=\"center\"\n            color=\"textSecondary\"\n            paragraph\n          >\n            Create and update your CVs\n          </Typography>\n          <div className={classes.heroButtons}>\n            <Grid container spacing={2} justify=\"center\">\n              <Grid item>\n                <Button\n                  startIcon={<AddIcon />}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleCreateNewCv}\n                >\n                  Create New\n                </Button>\n              </Grid>\n            </Grid>\n          </div>\n        </Container>\n      </div>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n          {cvs.length > 0 ? (\n            cvs.map((cv, index) => (\n              <Grid item key={index} xs={12} sm={6} md={5}>\n                <Card className={classes.card}>\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {cv.name}\n                    </Typography>\n                    <small>\n                      Updated{\" \"}\n                      {new Date(cv.lastUpdated).toLocaleString([], {\n                        timeStyle: \"short\",\n                        dateStyle: \"short\",\n                      })}\n                    </small>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      startIcon={<CreateIcon />}\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={() => push(`/cv/edit/${cv._id}`)}\n                    >\n                      Edit\n                    </Button>\n                    <Button\n                      startIcon={<GetAppIcon />}\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={() => {\n                        window.open(`${API_URL}/export/pdf/${cv._id}`);\n                      }}\n                    >\n                      Download\n                    </Button>\n                    <Button\n                      startIcon={<DeleteIcon />}\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={() => setCvToBeDeleted(cv._id)}\n                    >\n                      Delete\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))\n          ) : (\n            <Grid\n              container\n              alignItems=\"center\"\n              justify=\"center\"\n              direction=\"column\"\n            >\n              <img style={{ width: \"50%\" }} src={nocvs} alt=\"No Cv\" />\n              <small>No CVs created</small>\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Dashboard;\n","import { API_URL } from \"../utils/utils\";\n\nexport const fetchCvById = async (cvId) => {\n  const response = await fetch(`${API_URL}/cv/edit/${cvId}`, {\n    credentials: \"include\",\n  });\n  const data = await response.json();\n  return data;\n};\n\nexport const updateEntity = async (entityName, entity) => {\n  const response = await fetch(`${API_URL}/${entityName}/${entity._id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(entity),\n    credentials: \"include\",\n  });\n  const data = await response.json();\n  return data;\n};\n\nexport const setDelay = (updateFunction, entity) => {\n  const timeoutId = setTimeout(() => updateFunction(entity), 1500);\n  return timeoutId;\n};\n","import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { updateEntity, setDelay } from \"../../services/CvService\";\n\nconst PersonalDetail = ({ initialValue }) => {\n  const [personalDetails, setPersonalDetails] = useState({ ...initialValue });\n\n  useEffect(() => {\n    setPersonalDetails({ ...initialValue });\n  }, [initialValue]);\n\n  useEffect(() => {\n    const updatePersonalDetails = async (personalDetails) => {\n      return updateEntity(\"personaldetails\", personalDetails);\n    };\n    const timeoutId = setDelay(updatePersonalDetails, personalDetails);\n    return () => clearTimeout(timeoutId);\n  }, [personalDetails]);\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={12}>\n        <Typography variant=\"h5\" color=\"textPrimary\">\n          Personal Details\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          label=\"Job Title\"\n          variant=\"outlined\"\n          placeholder=\"e.g. Web Developer\"\n          style={{ marginBottom: 20 }}\n          size=\"small\"\n          fullWidth\n          onChange={(e) =>\n            setPersonalDetails({\n              ...personalDetails,\n              jobTitle: e.target.value,\n            })\n          }\n          value={personalDetails.jobTitle}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          label=\"Email\"\n          variant=\"outlined\"\n          style={{ marginBottom: 20 }}\n          size=\"small\"\n          fullWidth\n          onChange={(e) =>\n            setPersonalDetails({\n              ...personalDetails,\n              mail: e.target.value,\n            })\n          }\n          value={personalDetails.mail}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          label=\"First Name\"\n          variant=\"outlined\"\n          style={{ marginBottom: 20 }}\n          size=\"small\"\n          fullWidth\n          onChange={(e) =>\n            setPersonalDetails({\n              ...personalDetails,\n              firstName: e.target.value,\n            })\n          }\n          value={personalDetails.firstName}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          label=\"Last Name\"\n          variant=\"outlined\"\n          style={{ marginBottom: 20 }}\n          size=\"small\"\n          fullWidth\n          onChange={(e) =>\n            setPersonalDetails({\n              ...personalDetails,\n              lastName: e.target.value,\n            })\n          }\n          value={personalDetails.lastName}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          label=\"Phone\"\n          variant=\"outlined\"\n          size=\"small\"\n          fullWidth\n          onChange={(e) =>\n            setPersonalDetails({\n              ...personalDetails,\n              phone: e.target.value,\n            })\n          }\n          value={personalDetails.phone}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PersonalDetail;\n","import { useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, ContentState, convertFromHTML } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"../../assets/wysig.css\";\nimport { convertToHTML } from \"draft-convert\";\n\nconst RichTextEditor = ({ object, setObject }) => {\n  const [editorState, setEditorState] = useState(\n    EditorState.createWithContent(\n      ContentState.createFromBlockArray(\n        convertFromHTML(\n          object ? object.description : \"<p>Overall experience</p>\"\n        )\n      )\n    )\n  );\n\n  const handleEditorChange = (state) => {\n    setEditorState(state);\n    convertContentToHTML();\n  };\n\n  const convertContentToHTML = () => {\n    let currentContentAsHTML = convertToHTML(editorState.getCurrentContent());\n    setObject({\n      ...object,\n      description: currentContentAsHTML,\n    });\n  };\n  return (\n    <Editor\n      editorState={editorState}\n      onEditorStateChange={handleEditorChange}\n      wrapperClassName=\"wrapper-class\"\n      editorClassName=\"editor-class\"\n      toolbarClassName=\"toolbar-class\"\n      toolbar={{\n        options: [\"inline\", \"list\", \"link\"],\n        inline: {\n          options: [\"bold\", \"italic\", \"underline\", \"strikethrough\"],\n        },\n      }}\n    />\n  );\n};\n\nexport default RichTextEditor;\n","import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport RichTextEditor from \"./RichTextEditor\";\nimport { updateEntity, setDelay } from \"../../services/CvService\";\n\n// https://blog.logrocket.com/building-rich-text-editors-in-react-using-draft-js-and-react-draft-wysiwyg/\n\nconst ProfessionalSummary = ({ initialValue }) => {\n  const [professionalSummary, setProfessionalSummary] = useState({\n    ...initialValue,\n  });\n\n  useEffect(() => {\n    setProfessionalSummary({ ...initialValue });\n  }, [initialValue]);\n\n  useEffect(() => {\n    const updateProfessionalSummary = async (professionalSummary) => {\n      return updateEntity(\"professionalsummary\", professionalSummary);\n    };\n    const timeoutId = setDelay(updateProfessionalSummary, professionalSummary);\n    return () => clearTimeout(timeoutId);\n  }, [professionalSummary]);\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={12}>\n        <Typography variant=\"h5\" color=\"textPrimary\">\n          Professional Summay\n        </Typography>\n        <Typography variant=\"subtitle2\" color=\"textSecondary\" paragraph>\n          Include 2-3 clear sentences about your overall experience\n        </Typography>\n        {professionalSummary ? (\n          <RichTextEditor\n            object={professionalSummary}\n            setObject={setProfessionalSummary}\n          />\n        ) : (\n          <p>Loading...</p>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default ProfessionalSummary;\n","import { useState, useEffect } from \"react\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RichTextEditor from \"./RichTextEditor\";\nimport { API_URL } from \"../../utils/utils\";\nimport AlertDialogSlide from \"../../components/utils/AlertDialogSlide\";\n\nconst Employment = ({ attributes, handleDelete }) => {\n  const [employment, setEmployment] = useState(attributes);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  useEffect(() => {\n    const updateEmployment = async (employment) => {\n      const response = await fetch(`${API_URL}/employment/${employment._id}`, {\n        credentials: \"include\",\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(employment),\n      });\n      const data = await response.json();\n      return data;\n    };\n    const timeoutId = setTimeout(() => updateEmployment(employment), 1500);\n    return () => clearTimeout(timeoutId);\n  }, [employment]);\n\n  return (\n    <Grid container spacing={2}>\n      {isDeleting && (\n        <AlertDialogSlide\n          title={\"Delete Entry\"}\n          contentText={\"Are you sure you want to delete this entry?\"}\n          handleConfirm={() => handleDelete(employment._id)}\n          handleClose={() => setIsDeleting(false)}\n        />\n      )}\n      <Grid item xs={11} sm={11}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>\n              {employment.jobTitle}\n              <br />\n              {new Date(employment.startDate).toLocaleDateString()} -{\" \"}\n              {new Date(employment.endDate).toLocaleDateString()}\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Job Title\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  onChange={(e) =>\n                    setEmployment({\n                      ...employment,\n                      jobTitle: e.target.value,\n                    })\n                  }\n                  value={employment.jobTitle}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Employer\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  onChange={(e) =>\n                    setEmployment({\n                      ...employment,\n                      employer: e.target.value,\n                    })\n                  }\n                  value={employment.employer}\n                />\n              </Grid>\n              <Grid item xs={6} sm={3}>\n                <TextField\n                  id=\"date\"\n                  variant=\"outlined\"\n                  label=\"Start\"\n                  type=\"date\"\n                  size=\"small\"\n                  fullWidth\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={(e) =>\n                    setEmployment({\n                      ...employment,\n                      startDate: e.target.value,\n                    })\n                  }\n                  value={employment.startDate}\n                />\n              </Grid>\n              <Grid item xs={6} sm={3}>\n                <TextField\n                  id=\"date\"\n                  variant=\"outlined\"\n                  label=\"End\"\n                  type=\"date\"\n                  size=\"small\"\n                  fullWidth\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={(e) =>\n                    setEmployment({\n                      ...employment,\n                      endDate: e.target.value,\n                    })\n                  }\n                  value={employment.endDate}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"City\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  onChange={(e) =>\n                    setEmployment({\n                      ...employment,\n                      city: e.target.value,\n                    })\n                  }\n                  value={employment.city}\n                />\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <Typography>Description</Typography>\n                <RichTextEditor object={employment} setObject={setEmployment} />\n              </Grid>\n            </Grid>\n          </AccordionDetails>\n        </Accordion>\n      </Grid>\n      <Grid item xs={1} sm={1} alignItems=\"center\" container>\n        <IconButton onClick={() => setIsDeleting(true)}>\n          <DeleteIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Employment;\n","import Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { API_URL } from \"../../utils/utils\";\nimport { useParams } from \"react-router-dom\";\n\nconst AddExperience = ({ entityName, handleAdd }) => {\n  const { cvId } = useParams();\n  return (\n    <Button\n      style={{ textTransform: \"none\" }}\n      startIcon={<AddIcon />}\n      color=\"primary\"\n      size=\"small\"\n      onClick={async () => {\n        const response = await fetch(\n          `${API_URL}/${entityName}/${cvId}/create`,\n          {\n            credentials: \"include\",\n            method: \"POST\",\n          }\n        );\n        const data = await response.json();\n        handleAdd(data);\n      }}\n    >\n      <b>Add {entityName}</b>\n    </Button>\n  );\n};\n\nexport default AddExperience;\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Employement from \"./Employement\";\nimport { API_URL } from \"../../utils/utils\";\nimport Snackbar from \"../../components/utils/SnackBar\";\nimport AddExperience from \"../../components/cv/AddExperience\";\n\nconst EmploymentHistory = ({ initialValue }) => {\n  const [hasDeleted, sethasDeleted] = useState(false);\n\n  const [employmentList, setEmploymentList] = useState(initialValue);\n\n  useEffect(() => {\n    setEmploymentList(initialValue);\n  }, [initialValue]);\n\n  const handleDelete = async (employmentId) => {\n    await fetch(`${API_URL}/employment/${employmentId}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n    });\n    setEmploymentList(\n      employmentList.filter((employment) => employment._id !== employmentId)\n    );\n    sethasDeleted(true);\n  };\n\n  const handleAdd = (newEmployment) => {\n    setEmploymentList([...employmentList, newEmployment]);\n  };\n\n  return (\n    <Grid item xs={12} sm={12}>\n      {hasDeleted && (\n        <Snackbar setHasDeleted={sethasDeleted} message=\"Deleted employment\" />\n      )}\n      <Typography variant=\"h5\" color=\"textPrimary\">\n        Employment History\n      </Typography>\n      <Typography variant=\"subtitle2\" color=\"textSecondary\" paragraph>\n        Include your last 10 years of relevant experience and dates in this\n        section. List your most recent position first.\n      </Typography>\n      {employmentList.map((employment, index) => (\n        <Employement\n          handleDelete={handleDelete}\n          attributes={employment}\n          key={index}\n        />\n      ))}\n      <Box mt={1} />\n      <AddExperience entityName={\"employment\"} handleAdd={handleAdd} />\n    </Grid>\n  );\n};\n\nexport default EmploymentHistory;\n","import { useState, useEffect } from \"react\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RichTextEditor from \"./RichTextEditor\";\nimport { API_URL } from \"../../utils/utils\";\nimport AlertDialogSlide from \"../../components/utils/AlertDialogSlide\";\n\nconst Education = ({ attributes, handleDelete }) => {\n  const [education, setEducation] = useState(attributes);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  useEffect(() => {\n    const updateEducation = async (education) => {\n      const response = await fetch(`${API_URL}/education/${education._id}`, {\n        credentials: \"include\",\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(education),\n      });\n      const data = await response.json();\n      return data;\n    };\n    const timeoutId = setTimeout(() => updateEducation(education), 1500);\n    return () => clearTimeout(timeoutId);\n  }, [education]);\n\n  return (\n    <Grid container spacing={2}>\n      {isDeleting && (\n        <AlertDialogSlide\n          title={\"Delete Entry\"}\n          contentText={\"Are you sure you want to delete this entry?\"}\n          handleConfirm={() => handleDelete(education._id)}\n          handleClose={() => setIsDeleting(false)}\n        />\n      )}\n      <Grid item xs={11} sm={11}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>\n              {education.school} - {education.degree}\n              <br />\n              {new Date(education.startDate).toLocaleDateString()} -{\" \"}\n              {new Date(education.endDate).toLocaleDateString()}\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"School\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  onChange={(e) =>\n                    setEducation({\n                      ...education,\n                      school: e.target.value,\n                    })\n                  }\n                  value={education.school}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Degree\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  onChange={(e) =>\n                    setEducation({\n                      ...education,\n                      degree: e.target.value,\n                    })\n                  }\n                  value={education.degree}\n                />\n              </Grid>\n              <Grid item xs={6} sm={3}>\n                <TextField\n                  id=\"date\"\n                  variant=\"outlined\"\n                  label=\"Start\"\n                  type=\"date\"\n                  size=\"small\"\n                  fullWidth\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={(e) =>\n                    setEducation({\n                      ...education,\n                      startDate: e.target.value,\n                    })\n                  }\n                  value={education.startDate}\n                />\n              </Grid>\n              <Grid item xs={6} sm={3}>\n                <TextField\n                  id=\"date\"\n                  variant=\"outlined\"\n                  label=\"End\"\n                  type=\"date\"\n                  size=\"small\"\n                  fullWidth\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={(e) =>\n                    setEducation({\n                      ...education,\n                      endDate: e.target.value,\n                    })\n                  }\n                  value={education.endDate}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"City\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  onChange={(e) =>\n                    setEducation({\n                      ...education,\n                      city: e.target.value,\n                    })\n                  }\n                  value={education.city}\n                />\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <Typography>Description</Typography>\n                <RichTextEditor object={education} setObject={setEducation} />\n              </Grid>\n            </Grid>\n          </AccordionDetails>\n        </Accordion>\n      </Grid>\n      <Grid item xs={1} sm={1} alignItems=\"center\" container>\n        <IconButton onClick={() => setIsDeleting(true)}>\n          <DeleteIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Education;\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Education from \"./Education\";\nimport { API_URL } from \"../../utils/utils\";\nimport Snackbar from \"../../components/utils/SnackBar\";\nimport AddExperience from \"../../components/cv/AddExperience\";\n\nconst EducationHistory = ({ initialValue }) => {\n  const [educationList, setEducationList] = useState(initialValue);\n  const [hasDeleted, sethasDeleted] = useState(false);\n\n  useEffect(() => {\n    setEducationList(initialValue);\n  }, [initialValue]);\n\n  const handleDelete = async (educationId) => {\n    await fetch(`${API_URL}/education/${educationId}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n    });\n    setEducationList(\n      educationList.filter((education) => education._id !== educationId)\n    );\n    sethasDeleted(true);\n  };\n\n  const handleAdd = (newEducation) => {\n    setEducationList([...educationList, newEducation]);\n  };\n\n  return (\n    <Grid item xs={12} sm={12}>\n      {hasDeleted && (\n        <Snackbar setHasDeleted={sethasDeleted} message=\"Deleted education\" />\n      )}\n      <Typography variant=\"h5\" color=\"textPrimary\">\n        Education\n      </Typography>\n      <Typography variant=\"subtitle2\" color=\"textSecondary\" paragraph>\n        If relevant, include your most recent educational achievements and the\n        dates here\n      </Typography>\n      {educationList.map((education, index) => (\n        <Education\n          handleDelete={handleDelete}\n          attributes={education}\n          key={index}\n        />\n      ))}\n      <Box mt={1} />\n      <AddExperience entityName={\"education\"} handleAdd={handleAdd} />\n    </Grid>\n  );\n};\n\nexport default EducationHistory;\n","import { useState, useEffect } from \"react\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { API_URL } from \"../../utils/utils\";\nimport AlertDialogSlide from \"../../components/utils/AlertDialogSlide\";\n\nconst SocialLink = ({ attributes, handleDelete }) => {\n  const [socialLink, setSocialLink] = useState(attributes);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  useEffect(() => {\n    const updateLink = async (socialLink) => {\n      const response = await fetch(`${API_URL}/links/${socialLink._id}`, {\n        credentials: \"include\",\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(socialLink),\n      });\n      const data = await response.json();\n      return data;\n    };\n    const timeoutId = setTimeout(() => updateLink(socialLink), 1500);\n    return () => clearTimeout(timeoutId);\n  }, [socialLink]);\n\n  return (\n    <Grid container spacing={2}>\n      {isDeleting && (\n        <AlertDialogSlide\n          title={\"Delete Entry\"}\n          contentText={\"Are you sure you want to delete this entry?\"}\n          handleConfirm={() => handleDelete(socialLink._id)}\n          handleClose={() => setIsDeleting(false)}\n        />\n      )}\n      <Grid item xs={11} sm={11}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>{socialLink.label}</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Label\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  onChange={(e) =>\n                    setSocialLink({\n                      ...socialLink,\n                      label: e.target.value,\n                    })\n                  }\n                  value={socialLink.label}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Link\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  onChange={(e) =>\n                    setSocialLink({\n                      ...socialLink,\n                      link: e.target.value,\n                    })\n                  }\n                  value={socialLink.link}\n                />\n              </Grid>\n            </Grid>\n          </AccordionDetails>\n        </Accordion>\n      </Grid>\n      <Grid item xs={1} sm={1} alignItems=\"center\" container>\n        <IconButton onClick={() => setIsDeleting(true)}>\n          <DeleteIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SocialLink;\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SocialLink from \"./SocialLink\";\nimport { API_URL } from \"../../utils/utils\";\nimport Snackbar from \"../utils/SnackBar\";\nimport AddExperience from \"./AddExperience\";\n\nconst SocialLinkList = ({ initialValue }) => {\n  const [hasDeleted, sethasDeleted] = useState(false);\n\n  const [linksList, setLinksList] = useState(initialValue);\n\n  useEffect(() => {\n    setLinksList(initialValue);\n  }, [initialValue]);\n\n  const handleDelete = async (linkId) => {\n    await fetch(`${API_URL}/links/${linkId}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n    });\n    setLinksList(linksList.filter((link) => link._id !== linkId));\n    sethasDeleted(true);\n  };\n\n  const handleAdd = (newLink) => {\n    setLinksList([...linksList, newLink]);\n  };\n\n  return (\n    <Grid item xs={12} sm={12}>\n      {hasDeleted && (\n        <Snackbar setHasDeleted={sethasDeleted} message=\"Deleted link\" />\n      )}\n      <Typography variant=\"h5\" color=\"textPrimary\">\n        Websites & Social Links\n      </Typography>\n      <Typography variant=\"subtitle2\" color=\"textSecondary\" paragraph>\n        You can add links to websites you want hiring managers to see! Perhaps\n        it will be a link to your portfolio, Linkedin profile, or personal\n        website\n      </Typography>\n      {linksList.map((socialLink, index) => (\n        <SocialLink\n          handleDelete={handleDelete}\n          attributes={socialLink}\n          key={index}\n        />\n      ))}\n      <Box mt={1} />\n      <AddExperience entityName={\"links\"} handleAdd={handleAdd} />\n    </Grid>\n  );\n};\n\nexport default SocialLinkList;\n","import { useState, useEffect } from \"react\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { API_URL } from \"../../utils/utils\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AlertDialogSlide from \"../../components/utils/AlertDialogSlide\";\n\nconst Language = ({ attributes, handleDelete }) => {\n  const [language, setLanguage] = useState(attributes);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  useEffect(() => {\n    const updateLanguage = async (language) => {\n      const response = await fetch(`${API_URL}/languages/${language._id}`, {\n        credentials: \"include\",\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(language),\n      });\n      const data = await response.json();\n      return data;\n    };\n    const timeoutId = setTimeout(() => updateLanguage(language), 1500);\n    return () => clearTimeout(timeoutId);\n  }, [language]);\n\n  return (\n    <Grid container spacing={2}>\n      {isDeleting && (\n        <AlertDialogSlide\n          title={\"Delete Entry\"}\n          contentText={\"Are you sure you want to delete this entry?\"}\n          handleConfirm={() => handleDelete(language._id)}\n          handleClose={() => setIsDeleting(false)}\n        />\n      )}\n      <Grid item xs={11} sm={11}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>\n              {language.name} - {language.level}\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  onChange={(e) =>\n                    setLanguage({\n                      ...language,\n                      name: e.target.value,\n                    })\n                  }\n                  value={language.name}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl size=\"small\" fullWidth variant=\"outlined\">\n                  <InputLabel htmlFor=\"outlined-age-native-simple\">\n                    Level\n                  </InputLabel>\n                  <Select\n                    native\n                    value={language.level}\n                    onChange={(e) =>\n                      setLanguage({\n                        ...language,\n                        level: e.target.value,\n                      })\n                    }\n                    label=\"Level\"\n                  >\n                    <option value={\"C2\"}>C2</option>\n                    <option value={\"C1\"}>C1</option>\n                    <option value={\"B2\"}>B2</option>\n                    <option value={\"B1\"}>B1</option>\n                    <option value={\"A2\"}>A2</option>\n                    <option value={\"A1\"}>A1</option>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </AccordionDetails>\n        </Accordion>\n      </Grid>\n      <Grid item xs={1} sm={1} alignItems=\"center\" container>\n        <IconButton onClick={() => setIsDeleting(true)}>\n          <DeleteIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Language;\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Language from \"./Language\";\nimport { API_URL } from \"../../utils/utils\";\nimport Snackbar from \"../utils/SnackBar\";\nimport AddExperience from \"./AddExperience\";\n\nconst LanguageList = ({ initialValue }) => {\n  const [hasDeleted, sethasDeleted] = useState(false);\n\n  const [languageList, setLanguageList] = useState(initialValue);\n\n  useEffect(() => {\n    setLanguageList(initialValue);\n  }, [initialValue]);\n\n  const handleDelete = async (languageId) => {\n    await fetch(`${API_URL}/languages/${languageId}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n    });\n    setLanguageList(\n      languageList.filter((language) => language._id !== languageId)\n    );\n    sethasDeleted(true);\n  };\n\n  const handleAdd = (newLanguage) => {\n    setLanguageList([...languageList, newLanguage]);\n  };\n\n  return (\n    <Grid item xs={12} sm={12}>\n      {hasDeleted && (\n        <Snackbar setHasDeleted={sethasDeleted} message=\"Deleted language\" />\n      )}\n      <Typography variant=\"h5\" color=\"textPrimary\">\n        Languages\n      </Typography>\n      <Box mt={1} />\n      {languageList.map((language, index) => (\n        <Language\n          handleDelete={handleDelete}\n          attributes={language}\n          key={index}\n        />\n      ))}\n      <Box mt={1} />\n      <AddExperience entityName={\"languages\"} handleAdd={handleAdd} />\n    </Grid>\n  );\n};\n\nexport default LanguageList;\n","import { useState, useEffect } from \"react\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { API_URL } from \"../../utils/utils\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AlertDialogSlide from \"../../components/utils/AlertDialogSlide\";\n\nconst Skill = ({ attributes, handleDelete }) => {\n  const [skill, setSkill] = useState(attributes);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  useEffect(() => {\n    const updateSkill = async (skill) => {\n      const response = await fetch(`${API_URL}/skills/${skill._id}`, {\n        credentials: \"include\",\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(skill),\n      });\n      const data = await response.json();\n      return data;\n    };\n    const timeoutId = setTimeout(() => updateSkill(skill), 1500);\n    return () => clearTimeout(timeoutId);\n  }, [skill]);\n\n  return (\n    <Grid container spacing={2}>\n      {isDeleting && (\n        <AlertDialogSlide\n          title={\"Delete Entry\"}\n          contentText={\"Are you sure you want to delete this entry?\"}\n          handleConfirm={() => handleDelete(skill._id)}\n          handleClose={() => setIsDeleting(false)}\n        />\n      )}\n      <Grid item xs={11} sm={11}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>\n              {skill.name} - {skill.level}\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  onChange={(e) =>\n                    setSkill({\n                      ...skill,\n                      name: e.target.value,\n                    })\n                  }\n                  value={skill.name}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl size=\"small\" fullWidth variant=\"outlined\">\n                  <InputLabel>Level</InputLabel>\n                  <Select\n                    native\n                    value={skill.level}\n                    onChange={(e) =>\n                      setSkill({\n                        ...skill,\n                        level: e.target.value,\n                      })\n                    }\n                    label=\"Level\"\n                  >\n                    <option value={\"Novice\"}>Novice</option>\n                    <option value={\"Beginner\"}>Beginner</option>\n                    <option value={\"Skillful\"}>Skillful</option>\n                    <option value={\"Experienced\"}>Experienced</option>\n                    <option value={\"Expert\"}>Expert</option>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </AccordionDetails>\n        </Accordion>\n      </Grid>\n      <Grid item xs={1} sm={1} alignItems=\"center\" container>\n        <IconButton onClick={() => setIsDeleting(true)}>\n          <DeleteIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Skill;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Box from \"@material-ui/core/Box\";\nimport { API_URL } from \"../../utils/utils\";\nimport { useParams } from \"react-router-dom\";\n\nconst SkillChips = ({ pickableSkills, handleAdd, setPickableSkills }) => {\n  const { cvId } = useParams();\n  return (\n    <React.Fragment>\n      {pickableSkills.map((skill, index) => (\n        <Box p={1} key={index}>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            color=\"primary\"\n            endIcon={<AddIcon />}\n            onClick={async () => {\n              const response = await fetch(`${API_URL}/skills/${cvId}/create`, {\n                credentials: \"include\",\n                headers: {\n                  \"Content-type\": \"application/json\",\n                },\n                method: \"POST\",\n                body: JSON.stringify({\n                  name: skill,\n                }),\n              });\n              const data = await response.json();\n              handleAdd(data);\n              setPickableSkills(pickableSkills.filter((s) => s !== skill));\n            }}\n          >\n            {skill}\n          </Button>\n        </Box>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default SkillChips;\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Skill from \"./Skill\";\nimport { API_URL } from \"../../utils/utils\";\nimport Snackbar from \"../utils/SnackBar\";\nimport AddExperience from \"./AddExperience\";\nimport SkillChips from \"./SkillChips\";\n\nconst PickableSkills = ({ initialValue }) => {\n  const [hasDeleted, sethasDeleted] = useState(false);\n\n  const [skillList, setSkillList] = useState(initialValue);\n  const [pickableSkills, setPickableSkills] = useState([\n    \"PHP\",\n    \"React\",\n    \"Vue\",\n    \"Spring\",\n    \"C#\",\n    \"Git\",\n    \"Linux\",\n    \"Azure\",\n    \"Python\",\n    \"Golang\",\n    \"Laravel\",\n    \"Java\",\n    \"Symfony\",\n    \"Javascript\",\n    \"MySQL\",\n    \"MongoDB\",\n    \"Redis\",\n  ]);\n\n  useEffect(() => {\n    setSkillList(initialValue);\n  }, [initialValue]);\n\n  const handleDelete = async (skillId) => {\n    await fetch(`${API_URL}/skills/${skillId}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n    });\n    setSkillList(skillList.filter((skill) => skill._id !== skillId));\n    sethasDeleted(true);\n  };\n\n  const handleAdd = (newSkill) => {\n    setSkillList([...skillList, newSkill]);\n  };\n\n  return (\n    <Grid item xs={12} sm={12}>\n      {hasDeleted && (\n        <Snackbar\n          setHasDeleted={sethasDeleted}\n          message=\"Skill has been deleted\"\n        />\n      )}\n      <Typography variant=\"h5\" color=\"textPrimary\">\n        Skills\n      </Typography>\n      <Grid container>\n        <SkillChips\n          setPickableSkills={setPickableSkills}\n          pickableSkills={pickableSkills}\n          handleAdd={handleAdd}\n        />\n      </Grid>\n\n      <Box mt={1} />\n      {skillList.map((skill, index) => (\n        <Skill handleDelete={handleDelete} attributes={skill} key={index} />\n      ))}\n      <Box mt={1} />\n      <AddExperience entityName={\"skills\"} handleAdd={handleAdd} />\n    </Grid>\n  );\n};\n\nexport default PickableSkills;\n","import React from \"react\";\nimport PersonalDetail from \"../../components/cv/PersonalDetail\";\nimport ProfessionalSummary from \"../../components/cv/ProfessionalSummary\";\nimport EmploymentHistory from \"../../components/cv/EmploymentHistory\";\nimport EducationHistory from \"../../components/cv/EducationHistory\";\nimport SocialLinkList from \"./SocialLinkList\";\nimport LanguageList from \"./LanguageList\";\nimport SkillList from \"./SkillList\";\n\nconst CvDataWrapper = ({ cv }) => {\n  return (\n    <React.Fragment>\n      <PersonalDetail initialValue={cv.personalDetails} />\n      <ProfessionalSummary initialValue={cv.professionalSummary} />\n      <EmploymentHistory initialValue={cv.employmentList} />\n      <EducationHistory initialValue={cv.educationList} />\n      <SocialLinkList initialValue={cv.socialLinksList} />\n      <SkillList initialValue={cv.skillList} />\n      <LanguageList initialValue={cv.languageList} />\n    </React.Fragment>\n  );\n};\n\nexport default CvDataWrapper;\n","import Fab from \"@material-ui/core/Fab\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst PreviewButton = ({ cvId, userName }) => {\n  const classes = useStyles();\n\n  return (\n    <Fab\n      style={{ textTransform: \"none\" }}\n      variant=\"extended\"\n      size=\"large\"\n      color=\"primary\"\n      aria-label=\"add\"\n      className={classes.fab}\n      onClick={() => {\n        window.open(`/cv/preview/${userName}/${cvId}`, \"_blank\");\n      }}\n    >\n      <strong>Preview & Download</strong>\n      <Box ml={1}>\n        <DescriptionIcon />\n      </Box>\n    </Fab>\n  );\n};\n\nexport default PreviewButton;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { API_URL } from \"../../utils/utils\";\n\nconst UpdateCvNameDialog = ({ handleClose, handleUpdate, cvId }) => {\n  const [cvName, setCvName] = useState(\"\");\n\n  const updateCvName = async () => {\n    const response = await fetch(`${API_URL}/cv/${cvId}`, {\n      credentials: \"include\",\n      method: \"PATCH\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: cvName,\n      }),\n    });\n    await response.json();\n    if (response.ok) {\n      handleUpdate(cvName);\n      handleClose(false);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={true}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Update CV name</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            You can have multiple CV's, so maybe it is a good idea to give it a\n            name.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Cv Name\"\n            type=\"text\"\n            value={cvName}\n            onChange={(e) => setCvName(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={updateCvName} color=\"primary\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default UpdateCvNameDialog;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport SessionAppBar from \"../../components/auth/SessionAppBar\";\nimport CvDataWrapper from \"../../components/cv/CvDataWrapper\";\nimport PreviewButton from \"../../components/cv/PreviewButton\";\nimport UpdateCvNameDialog from \"../../components/cv/UpdateCvNameDialog\";\nimport { fetchCvById } from \"../../services/CvService\";\nimport { API_URL } from \"../../utils/utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  wrapper: {\n    marginTop: 30,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#000\",\n  },\n}));\n\nconst Edit = () => {\n  const classes = useStyles();\n\n  const { cvId } = useParams();\n  const [cv, setCv] = useState(null);\n  const [isUpdatingCvName, setIsUpdatingCvName] = useState(false);\n  const [user, setUser] = useLocalStorage(\"user\", {});\n\n  useEffect(() => {\n    const getCvById = async () => {\n      const data = await fetchCvById(cvId);\n      setCv(data);\n    };\n    getCvById();\n  }, [cvId]);\n\n  const handleChangeName = (name) => {\n    setCv({\n      ...cv,\n      name: name,\n    });\n  };\n\n  return cv !== null ? (\n    <React.Fragment>\n      <CssBaseline />\n      <SessionAppBar />\n      {isUpdatingCvName && (\n        <UpdateCvNameDialog\n          handleClose={setIsUpdatingCvName}\n          handleUpdate={handleChangeName}\n          cvId={cvId}\n        />\n      )}\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"sm\">\n          <Typography\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n            style={{ cursor: \"pointer\" }}\n            onClick={() => setIsUpdatingCvName(true)}\n          >\n            {cv.name}\n          </Typography>\n          <Typography\n            variant=\"subtitle2\"\n            align=\"center\"\n            color=\"textSecondary\"\n            paragraph\n          >\n            English\n          </Typography>\n        </Container>\n      </div>\n      <Divider />\n      <Container maxWidth=\"md\" className={classes.wrapper}>\n        <Grid container spacing={3}>\n          <CvDataWrapper cv={cv} />\n        </Grid>\n        <PreviewButton\n          cvId={cv._id}\n          userName={user.firstName.concat(user.lastName).trim().toLowerCase()}\n        />\n      </Container>\n    </React.Fragment>\n  ) : (\n    <Backdrop className={classes.backdrop} open={true}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n\nexport default Edit;\n","import React, { useState } from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Copyright from \"../components/Copyright\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport { API_URL } from \"../utils/utils\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Signup() {\n  const classes = useStyles();\n\n  const { push } = useHistory();\n  const [hasCreateFailed, setHasCreateFailed] = useState(false);\n  const [_user, _setUser] = useLocalStorage(\"user\", {});\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch(`${API_URL}/users/create`, {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify(user),\n    });\n    if (response.ok) {\n      const data = await response.json();\n      _setUser(data);\n      push({\n        pathname: \"/dashboard\",\n        state: {},\n      });\n    } else {\n      setHasCreateFailed(true);\n    }\n  };\n\n  const Alert = (props) => (\n    <MuiAlert elevation={6} variant=\"filled\" {...props} />\n  );\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      {hasCreateFailed && (\n        <Alert severity=\"error\">\n          Unable to create new user. Try changing the email address.\n        </Alert>\n      )}\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                value={user.firstName}\n                onChange={(e) =>\n                  setUser({\n                    ...user,\n                    firstName: e.target.value,\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={user.lastName}\n                onChange={(e) =>\n                  setUser({\n                    ...user,\n                    lastName: e.target.value,\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                value={user.email}\n                onChange={(e) =>\n                  setUser({\n                    ...user,\n                    email: e.target.value,\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                value={user.password}\n                onChange={(e) =>\n                  setUser({\n                    ...user,\n                    password: e.target.value,\n                  })\n                }\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link\n                href=\"#\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  push({\n                    pathname: \"/login\",\n                  });\n                }}\n                variant=\"body2\"\n              >\n                {\"Already have an account? Sign in\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst SocialLinksPreview = ({ classes, socialLinksList }) => {\n  return (\n    <React.Fragment>\n      <Box mb={3}>\n        <Typography className={classes.sectionTitle}>\n          <u>LI</u>NKS\n        </Typography>\n      </Box>\n      <Box mb={4}>\n        {socialLinksList.map((socialLink, index) => (\n          <Box key={index} mb={1}>\n            <a target=\"_blank\" href={socialLink.link}>\n              <Typography className={classes.normalText}>\n                {socialLink.label}\n              </Typography>\n            </a>\n          </Box>\n        ))}\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default SocialLinksPreview;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst PersonalDetailsPreview = ({ classes, personalDetails }) => {\n  return (\n    <React.Fragment>\n      <Box mb={3}>\n        <Typography className={classes.sectionTitle}>\n          <u>DE</u>TAILS\n        </Typography>\n      </Box>\n      <Box mb={2}>\n        <Typography className={classes.subTitle}>PHONE</Typography>\n        <Typography className={classes.normalText}>\n          {personalDetails.phone}\n        </Typography>\n      </Box>\n      <Box mb={4}>\n        <Typography className={classes.subTitle}>EMAIL</Typography>\n        <Typography className={classes.normalText}>\n          {personalDetails.mail}\n        </Typography>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default PersonalDetailsPreview;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst EmploymentHistoryPreview = ({ employmentList, classes }) => {\n  return (\n    <React.Fragment>\n      <Box mb={3}>\n        <Typography className={classes.sectionTitle}>\n          <u>EM</u>PLOYMENT HISTORY\n        </Typography>\n      </Box>\n      {employmentList.map((employment, index) => (\n        <Box key={index} mb={4}>\n          <Grid container spacing={3}>\n            <Grid item sm={10}>\n              <Typography className={classes.employment}>\n                {employment.jobTitle}, {employment.employer}\n              </Typography>\n              <Typography className={classes.normalText}>\n                {employment.startDate} - {employment.endDate}\n              </Typography>\n              <Box mt={2}>\n                <Typography\n                  className={classes.normalText}\n                  dangerouslySetInnerHTML={{\n                    __html: employment.description,\n                  }}\n                />\n              </Box>\n            </Grid>\n            <Grid item sm={2}>\n              <Typography className={classes.normalText}>\n                {employment.city}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default EmploymentHistoryPreview;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst EducationHistoryPreview = ({ classes, educationList }) => {\n  return (\n    <React.Fragment>\n      <Box mb={3}>\n        <Typography className={classes.sectionTitle}>\n          <u>ED</u>UCATION\n        </Typography>\n      </Box>\n      {educationList.map((education, index) => (\n        <Grid container spacing={3} key={index}>\n          <Grid item sm={10}>\n            <Typography className={classes.employment}>\n              {education.degree} - {education.school}\n            </Typography>\n            <Typography className={classes.normalText}>\n              {education.startDate} - {education.endDate}\n            </Typography>\n            <Box mt={2}>\n              <Typography\n                className={classes.normalText}\n                dangerouslySetInnerHTML={{\n                  __html: education.description,\n                }}\n              />\n            </Box>\n          </Grid>\n          <Grid item sm={2}>\n            <Typography className={classes.normalText}>\n              {education.city}\n            </Typography>\n          </Grid>\n        </Grid>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default EducationHistoryPreview;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fab from \"@material-ui/core/Fab\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport \"../../assets/cvpreview.css\";\nimport { fetchCvById } from \"../../services/CvService\";\nimport { API_URL } from \"../../utils/utils\";\nimport SocialLinksPreview from \"../../components/cv/preview/SocialLinksPreview\";\nimport PersonalDetailsPreview from \"../../components/cv/preview/PersonalDetailsPreview\";\nimport EmploymentHistoryPreview from \"../../components/cv/preview/EmploymentHistoryPreview\";\nimport EducationHistoryPreview from \"../../components/cv/preview/EducationHistoryPreview\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 40,\n    float: \"left\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#000\",\n  },\n  bold: {\n    fontWeight: 600,\n  },\n  sectionTitle: {\n    fontWeight: 600,\n    letterSpacing: \"2px\",\n  },\n  subTitle: {\n    fontSize: \"0.8rem\",\n    fontWeight: 600,\n  },\n  normalText: {\n    fontSize: \"0.8rem\",\n    fontWeight: \"lighter\",\n  },\n  employment: {\n    fontSize: \"0.8rem\",\n    fontWeight: 600,\n  },\n  nameSurname: {\n    fontSize: \"2rem\",\n    fontWeight: 600,\n    textTransform: \"uppercase\",\n    letterSpacing: \"2px\",\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst CvPreview = () => {\n  const classes = useStyles();\n\n  const { cvId } = useParams();\n\n  const [cv, setCv] = useState(null);\n  let progressMap = new Map();\n  progressMap.set(\"A1\", \"16\");\n  progressMap.set(\"A2\", \"32\");\n  progressMap.set(\"B1\", \"48\");\n  progressMap.set(\"B2\", \"64\");\n  progressMap.set(\"C1\", \"80\");\n  progressMap.set(\"C2\", \"96\");\n\n  useEffect(() => {\n    const getCvById = async () => {\n      const data = await fetchCvById(cvId);\n      setCv(data);\n    };\n    getCvById();\n  }, [cvId]);\n\n  return cv !== null ? (\n    <Container maxWidth=\"lg\">\n      <Grid container sm={12} xs={12}>\n        <Grid item sm={12} xs={12}>\n          <Box mb={2}>\n            <Typography className={classes.nameSurname}>\n              {cv.personalDetails.firstName}\n            </Typography>\n            <Typography className={classes.nameSurname}>\n              {cv.personalDetails.lastName}\n            </Typography>\n            <Typography className={classes.normalText}>\n              {cv.personalDetails.jobTitle}\n            </Typography>\n            <br />\n            <Divider />\n          </Box>\n        </Grid>\n\n        <Grid item sm={3}>\n          <PersonalDetailsPreview\n            classes={classes}\n            personalDetails={cv.personalDetails}\n          />\n          <SocialLinksPreview\n            classes={classes}\n            socialLinksList={cv.socialLinksList}\n          />\n          <Box mb={3}>\n            <Typography className={classes.sectionTitle}>\n              <u>SK</u>ILLS\n            </Typography>\n          </Box>\n          <Box mb={4}>\n            {cv.skillList.map((skill, index) => (\n              <Box key={index} mb={1}>\n                <Typography key={index} className={classes.normalText}>\n                  {skill.name}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n          <Box mb={3}>\n            <Typography className={classes.sectionTitle}>\n              <u>LA</u>NGUAGES\n            </Typography>\n          </Box>\n          <Box mb={3}>\n            {cv.languageList.map((language, index) => (\n              <Box key={index} mb={1}>\n                <Grid container direction=\"column\">\n                  <Grid item>\n                    <Typography className={classes.normalText}>\n                      {language.name}\n                    </Typography>\n                    <progress\n                      value={progressMap.get(language.level)}\n                      max=\"96\"\n                    ></progress>\n                  </Grid>\n                </Grid>\n              </Box>\n            ))}\n          </Box>\n        </Grid>\n        <Grid item sm={1} style={{ maxWidth: \"3.33%\" }}>\n          <Divider orientation=\"vertical\" />\n        </Grid>\n        <Grid item sm={8}>\n          <Box mb={3}>\n            <Typography className={classes.sectionTitle}>\n              <u>PR</u>OFILE\n            </Typography>\n          </Box>\n          <Box mb={4}>\n            <Typography\n              className={classes.normalText}\n              dangerouslySetInnerHTML={{\n                __html: cv.professionalSummary.description,\n              }}\n            />\n          </Box>\n          <Box mb={4}>\n            <Divider />\n          </Box>\n          <EmploymentHistoryPreview\n            classes={classes}\n            employmentList={cv.employmentList}\n          />\n          <Box mb={4}>\n            <Divider />\n          </Box>\n          <EducationHistoryPreview\n            classes={classes}\n            educationList={cv.educationList}\n          />\n        </Grid>\n      </Grid>\n      <Fab\n        style={{ textTransform: \"none\" }}\n        variant=\"extended\"\n        size=\"large\"\n        color=\"primary\"\n        aria-label=\"add\"\n        className={classes.fab}\n        onClick={() => {\n          window.open(`${API_URL}/export/pdf/${cv._id}`);\n        }}\n      >\n        <strong>Print</strong>\n        <Box ml={1}>\n          <PrintIcon />\n        </Box>\n      </Fab>\n    </Container>\n  ) : (\n    <Backdrop className={classes.backdrop} open={true}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n\nexport default CvPreview;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"../../assets/cvpreview.css\";\nimport { fetchCvById } from \"../../services/CvService\";\nimport SocialLinksPreview from \"../../components/cv/preview/SocialLinksPreview\";\nimport PersonalDetailsPreview from \"../../components/cv/preview/PersonalDetailsPreview\";\nimport EmploymentHistoryPreview from \"../../components/cv/preview/EmploymentHistoryPreview\";\nimport EducationHistoryPreview from \"../../components/cv/preview/EducationHistoryPreview\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 40,\n    float: \"left\",\n  },\n  bold: {\n    fontWeight: 600,\n  },\n  sectionTitle: {\n    fontWeight: 600,\n    letterSpacing: \"2px\",\n  },\n  subTitle: {\n    fontSize: \"0.8rem\",\n    fontWeight: 600,\n  },\n  normalText: {\n    fontSize: \"0.8rem\",\n    fontWeight: \"lighter\",\n  },\n  employment: {\n    fontSize: \"0.8rem\",\n    fontWeight: 600,\n  },\n  nameSurname: {\n    fontSize: \"2rem\",\n    fontWeight: 600,\n    textTransform: \"uppercase\",\n    letterSpacing: \"2px\",\n  },\n}));\n\nconst CvPrint = () => {\n  const classes = useStyles();\n\n  const { cvId } = useParams();\n\n  const [cv, setCv] = useState(null);\n  let progressMap = new Map();\n  progressMap.set(\"A1\", \"16\");\n  progressMap.set(\"A2\", \"32\");\n  progressMap.set(\"B1\", \"48\");\n  progressMap.set(\"B2\", \"64\");\n  progressMap.set(\"C1\", \"80\");\n  progressMap.set(\"C2\", \"96\");\n\n  useEffect(() => {\n    const getCvById = async () => {\n      const data = await fetchCvById(cvId);\n      setCv(data);\n    };\n    getCvById();\n  }, [cvId]);\n\n  return cv !== null ? (\n    <Container maxWidth=\"lg\">\n      <Grid container sm={12} xs={12}>\n        <Grid item sm={12} xs={12}>\n          <Box mb={2}>\n            <Typography className={classes.nameSurname}>\n              {cv.personalDetails.firstName}\n            </Typography>\n            <Typography className={classes.nameSurname}>\n              {cv.personalDetails.lastName}\n            </Typography>\n            <Typography className={classes.normalText}>\n              {cv.personalDetails.jobTitle}\n            </Typography>\n            <br />\n            <Divider />\n          </Box>\n        </Grid>\n\n        <Grid item sm={3}>\n          <PersonalDetailsPreview\n            classes={classes}\n            personalDetails={cv.personalDetails}\n          />\n          <SocialLinksPreview\n            classes={classes}\n            socialLinksList={cv.socialLinksList}\n          />\n          <Box mb={3}>\n            <Typography className={classes.sectionTitle}>\n              <u>SK</u>ILLS\n            </Typography>\n          </Box>\n          <Box mb={4}>\n            {cv.skillList.map((skill, index) => (\n              <Box key={index} mb={1}>\n                <Typography key={index} className={classes.normalText}>\n                  {skill.name}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n          <Box mb={3}>\n            <Typography className={classes.sectionTitle}>\n              <u>LA</u>NGUAGES\n            </Typography>\n          </Box>\n          <Box mb={3}>\n            {cv.languageList.map((language, index) => (\n              <Box key={index} mb={1}>\n                <Grid container direction=\"column\">\n                  <Grid item>\n                    <Typography className={classes.normalText}>\n                      {language.name}\n                    </Typography>\n                    <progress\n                      value={progressMap.get(language.level)}\n                      max=\"96\"\n                    ></progress>\n                  </Grid>\n                </Grid>\n              </Box>\n            ))}\n          </Box>\n        </Grid>\n        <Grid item sm={1} style={{ maxWidth: \"3.33%\" }}>\n          <Divider orientation=\"vertical\" />\n        </Grid>\n        <Grid item sm={8}>\n          <Box mb={3}>\n            <Typography className={classes.sectionTitle}>\n              <u>PR</u>OFILE\n            </Typography>\n          </Box>\n          <Box mb={4}>\n            <Typography\n              className={classes.normalText}\n              dangerouslySetInnerHTML={{\n                __html: cv.professionalSummary.description,\n              }}\n            />\n          </Box>\n          <Box mb={4}>\n            <Divider />\n          </Box>\n          <EmploymentHistoryPreview\n            classes={classes}\n            employmentList={cv.employmentList}\n          />\n          <Box mb={4}>\n            <Divider />\n          </Box>\n          <EducationHistoryPreview\n            classes={classes}\n            educationList={cv.educationList}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  ) : (\n    <React.Fragment></React.Fragment>\n  );\n};\n\nexport default CvPrint;\n","export default __webpack_public_path__ + \"static/media/cv-example.3f78161b.png\";","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport cvExImage from \"../assets/cv-example.png\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/daily?resume)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  title: {\n    fontWeight: 800,\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  const { push } = useHistory();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography className={classes.title} align=\"center\" variant=\"h3\">\n            Create your CV for free\n          </Typography>\n          <br />\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            In just a few clicks, increase your chances of finding a job. Create\n            and download your CV immediately.\n          </Typography>\n          <br />\n          <Button\n            size=\"large\"\n            type=\"button\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() =>\n              push({\n                pathname: \"/dashboard\",\n              })\n            }\n          >\n            Create my Cv\n          </Button>\n          <img src={cvExImage} />\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Signin from \"./pages/Signin\";\nimport PrivateRoute from \"./components/auth/PrivateRoute\";\nimport Dashboard from \"./pages/cv/Dashboard\";\nimport Edit from \"./pages/cv/Edit\";\nimport Signup from \"./pages/Signup\";\nimport CvPreview from \"./pages/cv/CvPreview\";\nimport CvPrint from \"./pages/cv/CvPrint\";\nimport Home from \"./pages/Home\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route component={Home} exact path=\"/\" />\n        <Route component={Signin} exact path=\"/login\" />\n        <Route component={Signup} exact path=\"/signup\" />\n        <PrivateRoute component={Dashboard} exact path=\"/dashboard\" />\n        <PrivateRoute component={Edit} exact path=\"/cv/edit/:cvId\" />\n        <PrivateRoute\n          component={CvPreview}\n          exact\n          path=\"/cv/preview/:userName/:cvId\"\n        />\n        <Route component={CvPrint} exact path=\"/cv/print/:cvId\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}